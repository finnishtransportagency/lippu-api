swagger: "2.0"
info:
  description: "Transport Code broughts together legal provisions on transport market under one act. \
                The LIPPU-project was created to help transport operators enable Mobility as a Service (MaaS) capabilities. \
                This is API specification of LIPPU-project. NOTE, the ticket payment capabilities are scoped out from LIPPU-project."
  version: "0.2.0-SNAPSHOT"
  title: "Lippu"
  license:
    name: EUPL v1.2
    url: https://joinup.ec.europa.eu/sites/default/files/ckeditor_files/files/EUPL%20v1_2%20EN(1).txt
host: "localhost"
basePath: "/stubs"
schemes:
- "http"
- "https"
paths:
  /auth/init:
    post:
      tags:
      - "login"
      summary: "Initiates authentication process"
      description: ""
      operationId: "initAuth"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: header
        name: X-Message-Id
        type: string
        required: true
        description: "Unique message identification that is used for error situations. Every client implementation will create its own message ids."
      - in: header
        name: X-Transaction-Id
        type: string
        required: true
        description: "Unique transaction identification that is used for error situations. \
                      Value is generated by original requestor and used in every message related to same ticket transaction."
      - in: header
        name: X-Initiator
        type: string
        required: true
        description: "Text indentification of original requestor. Value is use for error situations."

      - in: "body"
        name: "body"
        description: "Company account identification"
        required: true
        schema:
          $ref: "#/definitions/AccountId"
      responses:
        200:
          description: "Authentication initialization response. Response includes server side nonce value for \
                        the authentication process."
          schema:
            $ref: "#/definitions/AuthenticationInitResponse"
        403:
          description: "Company account does not exists or valid authentication token could not be generated."
          schema:
            $ref: '#/definitions/ApiError'
        405:
          description: "Invalid company account."
          schema:
            $ref: '#/definitions/ApiError'

  /auth/commit:
    post:
      tags:
      - "login"
      summary: "Creates a valid authentication token"
      description: ""
      operationId: "commitAuth"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: header
        name: X-Message-Id
        type: string
        required: true
        description: "Unique message identification that is used for error situations. Every client implementation will create its own message ids."

      - in: header
        name: X-Transaction-Id
        type: string
        required: true
        description: "Unique transaction identification that is used for error situations. \
                      Value is generated by original requestor and used in every message related to same ticket transaction."
      - in: header
        name: X-Initiator
        type: string
        required: true
        description: "Text indentification of original requestor. Value is use for error situations."

      - in: "body"
        name: "body"
        description: "Input for validating authentication request."
        required: true
        schema:
          $ref: "#/definitions/AuthenticationRequest"
      responses:
        200:
          description: "[JWT](https://jwt.io/) authentication token for making authorized requests."
          schema:
            $ref: "#/definitions/AuthenticationResponse"
        403:
          description: "Authentication failed"
          schema:
            $ref: '#/definitions/ApiError'
        405:
          description: "Input error"
          schema:
            $ref: '#/definitions/ApiError'

  /products/{date}:
    get:
      tags:
      - "availability"
      summary: "Product portfolio for given datetime."
      description: "Returns product portfolio of transport operator that is valid on given datetime.\
                    As product offerings can change over time, and some products may be seasonal, \
                    the date is always part of the search process. If the search parameter {date} \
                    is left unchecked, then the time of the query is assumed as a time."
      operationId: "products"
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - in: header
          name: X-Message-Id
          type: string
          required: true
          description: "Unique message identification that is used for error situations. Every client implementation will create its own message ids."

        - in: header
          name: X-Transaction-Id
          type: string
          required: true
          description: "Unique transaction identification that is used for error situations. \
                      Value is generated by original requestor and used in every message related to same ticket transaction."
        - in: header
          name: X-Initiator
          type: string
          required: true
          description: "Text indentification of original requestor. Value is use for error situations."

        - in: header
          name: X-Authorization
          type: string
          required: true
          description: "JWT authentication token for authorization requests."

        - in: path
          name: date
          description: "Datetime value when returned product portfolio is valid. If date is not given, current datetime is used."
          required: true
          type: string
          format: "date-time"

        - in: query
          name: fromLat
          type: number
          format: double
          required: false
          description: Longitude part of a coordinate to narrow products query from a certain location.

        - in: query
          name: fromLon
          type: number
          format: double
          required: false
          description: Longitude part of a coordinate to narrow products query from a certain location.

        - in: query
          name: toLat
          type: number
          format: double
          required: false
          description: Latitude part of a coordinate to narrow products query to a certain location.

        - in: query
          name: toLon
          type: number
          format: double
          required: false
          description: Longitude part of a coordinate to narrow products query to a certain location.

        - in: query
          name: accessibility
          type: array
          format: string
          required: false
          items:
            type: string
            enum:
              - WHEELCHAIR
              - PUSHCHAIR
              - PASSENGER_CART
              - LOW-FLOOR
              - GUIDE_DOG
              - ONBOARD_ASSISTANCE
              - BOARDING_ASSISTANCE
              - UNACCOMPANIED_MINOR_ASSISTANCE
              - STEP_FREE_ACCESS
          description: List of required accessibility options for the product.

      responses:
        200:
          description: "Returns product portfolio and supported passenger types for provided products."
          schema:
            $ref: "#/definitions/ProductQueryResponse"
        403:
          description: "Invalid authentication token"
          schema:
            $ref: '#/definitions/ApiError'


  /availability:
    post:
      tags:
      - "availability"
      summary: "Trip availaibility inquiry"
      description: "API to inquire trip availabilities from transport operator."
      operationId: "availability"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: header
        name: X-Message-Id
        type: string
        required: true
        description: "Unique message identification that is used for error situations. Every client implementation will create its own message ids."

      - in: header
        name: X-Transaction-Id
        type: string
        required: true
        description: "Unique transaction identification that is used for error situations. \
                      Value is generated by original requestor and used in every message related to same ticket transaction."
      - in: header
        name: X-Initiator
        type: string
        required: true
        description: "Text indentification of original requestor. Value is use for error situations."

      - in: header
        name: Accept-Language
        type: string
        required: true
        description: "Language value like specified in [RFC 2616](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.4). \
                        Value is used to localize response values."

      - in: header
        name: X-Authorization
        type: string
        required: true
        description: "[JWT](https://jwt.io/) authentication token for authorization requests."

      - in: "body"
        name: "body"
        description: "Availability search terms"
        required: true
        schema:
          $ref: "#/definitions/AvailabilityRequest"
      responses:
        200:
          description: "Returns free transport service capability with given search terms."
          schema:
            $ref: "#/definitions/AvailabilityResponse"
        403:
          description: "Invalid authentication token"
          schema:
            $ref: '#/definitions/ApiError'


  /reservation:
    post:
      tags:
      - "reservation"
      summary: "Travel reservation"
      description: "An interface that allows operators to make travel reservations from a transport service."
      operationId: "reservation"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: header
        name: X-Message-Id
        type: string
        required: true
        description: "Unique message identification that is used for error situations. Every client implementation will create its own message ids."

      - in: header
        name: X-Transaction-Id
        type: string
        required: true
        description: "Unique transaction identification that is used for error situations. \
                      Value is generated by original requestor and used in every message related to same ticket transaction."
      - in: header
        name: X-Initiator
        type: string
        required: true
        description: "Text indentification of original requestor. Value is use for error situations."

      - in: header
        name: Accept-Language
        type: string
        required: true
        description: "Language value like specified in [RFC 2616](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.4). \
                        Value is used to localize response values."

      - in: header
        name: X-Authorization
        type: string
        required: true
        description: "[JWT](https://jwt.io/) authentication token for authorization requests."

      - in: "body"
        name: "body"
        description: "Reservation information"
        required: true
        schema:
          $ref: "#/definitions/ReservationRequest"
      responses:
        200:
          description: "Returns the ticket-payloads generated by the transport service and the corresponding booking data."
          schema:
            $ref: "#/definitions/ReservationResponse"
        403:
          description: "Invalid authentication token"
          schema:
            $ref: '#/definitions/ApiError'

  /reservation/{caseId}:
    delete:
      tags:
      - "reservation"
      summary: "Cancelletion of transport reservation"
      description: ""
      operationId: "reservationDelete"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: header
        name: X-Message-Id
        type: string
        required: true
        description: "Unique message identification that is used for error situations. Every client implementation \
                      will create its own message ids."

      - in: header
        name: X-Transaction-Id
        type: string
        required: true
        description: "Unique transaction identification that is used for error situations. \
                      Value is generated by original requestor and used in every message related to same ticket \
                      transaction."
      - in: header
        name: X-Initiator
        type: string
        required: true
        description: "Text indentification of original requestor. Value is use for error situations."

      - in: header
        name: X-Authorization
        type: string
        required: true
        description: "[JWT](https://jwt.io/) authentication token for authorization requests."

      - in: path
        name: caseId
        description: "A case identifier for a reservation that will be removed"
        required: true
        type: string
      responses:
        200:
          description: "Returns an acknowledgment of a successful cancellation"
          schema:
            $ref: '#/definitions/ReservationDeleteResponse'
        403:
          description: "Case id does not exists or invalid authentication token"
          schema:
            $ref: '#/definitions/ApiError'
        404:
          description: "No valid booking with given case identifier."
          schema:
            $ref: '#/definitions/ApiError'

# -----------------------------------------------------
# REQUEST AND RESPONSE DEFINITIONS
# -----------------------------------------------------

definitions:

  AuthenticationInitResponse:
    type: object
    required:
      - nonce
      - expires
    description: "Response for authentication initialization."
    properties:
      nonce:
        type: string
        description: "Server side nonce value."
      user:
        type: string
        description: "Account name for the client company."
      expires:
        type: string
        format: "date-time"
        description: "Nonce expiration time."

  AuthenticationRequest:
    type: object
    required:
      - data
      - pubKeyId
      - cnonce
      - snonce
      - alg
    properties:
      data:
        type: string
        description: "A cryptographically signed message. Compiled by merging the nonce + client nonce server \
                      into a single long string. The server has base64 encoded its own value. The client end \
                      can do the encoding they want as it is used as part of the verification process."
      pubKeyId:
        type: string
        description: "The server identifier for the Public Key"
      snonce:
        type: string
        description: "The cryptographic nonce value created by server"
      cnonce:
        type: string
        description: "The cryptographic nonce value created by client"
      alg:
        type: string
        description: "The algorithm to sign message **data**."
        enum:
        - RSA+SHA256
        - ECDSA

  AuthenticationResponse:
    type: object
    required:
      - token
      - expires
    description: "The authentication token for a successful authentication."
    properties:
      token:
        type: string
        description: "JWT based authentication token"
      user:
        type: string
        description: "Account name for the client company."
      expires:
        type: string
        format: "date-time"
        description: "Token expiration time."

  ProductQueryResponse:
    type: object
    required:
      - products
      - passengerCategories
    properties:
      products:
        $ref: "#/definitions/ProductList"
      passengerCategories:
        type: array
        items:
          type: string
    example:
      - products:
        - productType: "PRODUCT-SINGLE-TICKET"
          contract: "CONTRACT-AB123CD"
          name: "Single ticket"
          description: "The validity of a single ticket starts at the time of purchase. The validity period will be \
                        printed to the ticket. "
          validFrom: "2017-08-22T07:20:04.474Z"
          validTo: "2018-08-23T07:20:04.474Z"
          suitablePassengerCategories: ["Adult", "Child", "Youth", "Senior"]
          extraServices:
            - title: "Childseat"
              description: "Separate child safety seat for the travel."
              extraServiceReservationData: "EXTRA-CHILD-SEAT-115311"
              fare:
                currency: "EUR"
                amount: 4
                vatPercent: 10
          accessibility:
            - title: "LOW-FLOOR"
              description: "Low-floor vechile."
            - title: "PUSHCHAIR"
              description: "Separte space for pushchairs."

        - productType: "PRODUCT-SEASON-TICKET"
          contract: "CONTRACT-AB123CD"
          name: "Season ticket"
          description: ""
          validFrom: "2017-08-22T07:00:00.000Z"
          validTo: "2018-08-23T07:04:00.000Z"
          suitablePassengerCategories: ["Adult", "Youth"]
          accessibility:
            - title: "UNKNOWN"
        passengerCategories: ["Adult", "Child", "Youth", "Senior"]

  AvailabilityRequest:
    type: object
    properties:
      contract:
        type: string
        description: "Contract identifier"
      travel:
        $ref: "#/definitions/Travel"
      passengers:
        type: array
        items:
          $ref: "#/definitions/TravelPassenger"
    example:
      - contract: "CONTRACT-AB123CD"
        travel:
          productType: "PRODUCT-SINGLE-TICKET"
          dateTime: "2017-08-23T07:20:04.474Z"
          from:
            lat: 60.2
            lon: 24.8
            description: "Kauppatori, Mikkeli"
          to:
            id: "MATKA:181342"
            description: "Lahti Matkakeskus C"
        passengers:
          - category: Adult
          - category: Adult
          - category: Child
            extraServices:
              - title: "Childseat"
                description: "Separate child safety seat for the travel."
                extraServiceReservationData: "EXTRA-CHILD-SEAT-115311"
                fare:
                  currency: "EUR"
                  amount: 4
                  vatPercent: 10


  AvailabilityResponse:
    type: object
    required:
      - contract
      - travel
      - availability
    properties:
      contract:
        type: string
        description: "Contract identifier"
      travel:
        $ref: "#/definitions/Travel"
      availability:
        type: array
        items:
          $ref: "#/definitions/TravelAvailability"
    example:
      - contract: "CONTRACT-AB123CD"
        travel:
          productType: "PRODUCT-SINGLE-TICKET"
          dateTime: "2017-08-23T07:20:04.474Z"
          from:
            lat: 60.2
            lon: 24.8
            description: "Kauppatori, Mikkeli"
          to:
            id: "MATKA:181342"
            platform: "Platform 7"
            description: "Lahti Matkakeskus C"
        availability:
          - reservationData: "InRyYXZlbCI6IFsNCiAgICB7DQogICAgICAidHJhdmVsVHlwZSI6ICJDb29yZGluYXRlQmFzZWRUcmF2ZWwiLA0KICAgICAgImZyb20iOiB7DQogICAgICAgICJsYXQiOiA2MC4yLA0KICAgICAgICAibG9uIjogMjQuOCwNCiAgICAgICAgImRlc2NyaXB0aW9uIjogIkthdXB1bmdpbnRhbG8sIExhaHRpIg0KICAgICAgfSwNCiAgICAgICJ0byI6IHsNCiAgICAgICAgImxhdCI6IDYxLjQsDQogICAgICAgICJsb24iOiAyMC40LA0KICAgICAgICAiZGVzY3JpcHRpb24iOiAiSGVpbm9sYSINCiAgICAgIH0sDQogICAgICAicHJvZHVjdFR5cGUiOiAiUFJPRFVDVC1TSU5HTEUtVElDS0VUIiwNCiAgICAgICJkYXRlVGltZSI6ICIyMDE3LTA4LTIzVDA3OjIwOjA0LjQ3NFoiDQogICAgfQ=="
            validTo: "2017-08-22T13:04:04.534Z"
            fare:
              currency: "EUR"
              amount: 13
              vatPercent: 10
            transport:
              operator: "Liikennöitsijä OY AB (Y-1234567)"
              vehicleInfo: "Coach Mikkeli-Lahti"
              seatInfo: "Seat number 45"
            applicableForPassengers:
              - category: "Adult"
          - reservationData: "XXXXXXXXIFsNCiAgICB7DQogICAgICAidHJhdmVsVHlwZSI6ICJDb29yZGluYXRlQmFzZWRUcmF2ZWwiLA0KICAgICAgImZyb20iOiB7DQogICAgICAgICJsYXQiOiA2MC4yLA0KICAgICAgICAibG9uIjogMjQuOCwNCiAgICAgICAgImRlc2NyaXB0aW9uIjogIkthdXB1bmdpbnRhbG8sIExhaHRpIg0KICAgICAgfSwNCiAgICAgICJ0byI6IHsNCiAgICAgICAgImxhdCI6IDYxLjQsDQogICAgICAgICJsb24iOiAyMC40LA0KICAgICAgICAiZGVzY3JpcHRpb24iOiAiSGVpbm9sYSINCiAgICAgIH0sDQogICAgICAicHJvZHVjdFR5cGUiOiAiUFJPRFVDVC1TSU5HTEUtVElDS0VUIiwNCiAgICAgICJkYXRlVGltZSI6ICIyMDE3LTA4LTIzVDA3OjIwOjA0LjQ3NFoiDQogICAgfQ=="
            validTo: "2017-08-22T13:04:04.534Z"
            fare:
              currency: "EUR"
              amount: 13
              vatPercent: 10
            transport:
              operator: "Liikennöitsijä OY AB (Y-1234567)"
              vehicleInfo: "Coach Mikkeli-Lahti"
              seatInfo: "Seat number 46"
            applicableForPassengers:
              - category: "Adult"
          - reservationData: "YYYYYYYYYIFsNCiAgICB7DQogICAgICAidHJhdmVsVHlwZSI6ICJDb29yZGluYXRlQmFzZWRUcmF2ZWwiLA0KICAgICAgImZyb20iOiB7DQogICAgICAgICJsYXQiOiA2MC4yLA0KICAgICAgICAibG9uIjogMjQuOCwNCiAgICAgICAgImRlc2NyaXB0aW9uIjogIkthdXB1bmdpbnRhbG8sIExhaHRpIg0KICAgICAgfSwNCiAgICAgICJ0byI6IHsNCiAgICAgICAgImxhdCI6IDYxLjQsDQogICAgICAgICJsb24iOiAyMC40LA0KICAgICAgICAiZGVzY3JpcHRpb24iOiAiSGVpbm9sYSINCiAgICAgIH0sDQogICAgICAicHJvZHVjdFR5cGUiOiAiUFJPRFVDVC1TSU5HTEUtVElDS0VUIiwNCiAgICAgICJkYXRlVGltZSI6ICIyMDE3LTA4LTIzVDA3OjIwOjA0LjQ3NFoiDQogICAgfQ=="
            validTo: "2017-08-22T13:04:04.534Z"
            fare:
              currency: "EUR"
              amount: 7.5
              vatPercent: 10
            transport:
              operator: "Liikennöitsijä OY AB (Y-1234567)"
              vehicleInfo: "Coach Mikkeli-Lahti"
              seatInfo: "Seat number 47"
            applicableForPassengers:
              - category: "Adult"
                extraServices:
                - title: "Childseat"
                  description: "Separate child safety seat for the travel."
                  extraServiceReservationData: "EXTRA-CHILD-SEAT-115311"
                  fare:
                    currency: "EUR"
                    amount: 4
                    vatPercent: 10



  ReservationRequest:
    type: object
    properties:
      reservations:
        type: array
        items:
          type: object
          properties:
            reservationData:
              type: string
              description: "Reservation data from availability response"
            customerInfo:
              type: array
              items:
                $ref: "#/definitions/CustomerInfo"
            chosenExtraReservationDatas:
              type: array
              description: "Reservation data of chosen extra services."
              items:
                type: string
    example:
      - reservations:
        - reservationData: "InRyYXZlbCI6IFsNCiAgICB7DQogICAgICAidHJhdmVsVHlwZSI6ICJDb29yZGluYXRlQmFzZWRUcmF2ZWwiLA0KICAgICAgImZyb20iOiB7DQogICAgICAgICJsYXQiOiA2MC4yLA0KICAgICAgICAibG9uIjogMjQuOCwNCiAgICAgICAgIm"
          customerInfo:
            name: "Matti Matkustaja"
            phone: "+3584444444"
            email: "matti.matkustaja@sahkoposti.fi"
        - reservationData: "XXXXXXXXXXXXXXXXXdHJhdmVsVHlwZSI6ICJDb29yZGluYXRlQmFzZWRUcmF2ZWwiLA0KICAgICAgImZyb20iOiB7DQogICAgICAgICJsYXQiOiA2MC4yLA0KICAgICAgICAibG9uIjogMjQuOCwNCiAgICAgICAgIm"
        - reservationData: "YYYYYYYYYYYYYYYYYYB7DQogICAgICAidHJhdmVsVHlwZSI6ICJDb29yZGluYXRlQmFzZWRUcmF2ZWwiLA0KICAgICAgImZyb20iOiB7DQogICAgICAgICJsYXQiOiA2MC4yLA0KICAgICAgICAibG9uIjogMjQuOCwNCiAgICAgICAgIm"

  ReservationResponse:
    type: object
    properties:
      caseId:
        type: string
        description: "Transaction case id. Eg. can be used to map payment clearing to ticket transactions."
      confirmedReservations:
        type: array
        items:
          type: object
          properties:
            reservationData:
              type: string
              description: "Reservation data"
            ticketPayload:
              type: string
              description: "Ticket payload. Format is agreed by API partners."
            validFrom:
              type: string
              format: "date-time"
              description: "Ticket payload valid from datetime. Ticket payload cannot be used outside of validity period."
            validTo:
              type: string
              format: "date-time"
              description: "Ticket payload valid to datetime. Ticket payload cannot be used outside of validity period."
    example:
      - caseId: "FIRMA/12345/2017"
        confirmedReservations:
          - reservationData: "InRyYXZlbCI6IFsNCiAgICB7DQogICAgICAidHJhdmVsVHlwZSI6ICJDb29yZGluYXRlQmFzZWRUcmF2ZWwiLA0KICAgICAgImZyb20iOiB7DQogICAgICAgICJsYXQiOiA2MC4yLA0KICAgICAgICAibG9uIjogMjQuOCwNCiAgICAgICAgIm"
            ticketPayload: "dGlja2V0IHBheWxvYWQ="
            validFrom: "2017-08-23T07:00:00"
            validTo: "2017-08-23T08:00:00"
          - reservationData: "XXXXXXXXXXXXXXXXXdHJhdmVsVHlwZSI6ICJDb29yZGluYXRlQmFzZWRUcmF2ZWwiLA0KICAgICAgImZyb20iOiB7DQogICAgICAgICJsYXQiOiA2MC4yLA0KICAgICAgICAibG9uIjogMjQuOCwNCiAgICAgICAgIm"
            ticketPayload: "dGlja2V0IHBheWxvYWQgMQ=="
            validFrom: "2017-08-23T07:00:00"
            validTo: "2017-08-23T08:00:00"
          - reservationData: "YYYYYYYYYYYYYYYYYYB7DQogICAgICAidHJhdmVsVHlwZSI6ICJDb29yZGluYXRlQmFzZWRUcmF2ZWwiLA0KICAgICAgImZyb20iOiB7DQogICAgICAgICJsYXQiOiA2MC4yLA0KICAgICAgICAibG9uIjogMjQuOCwNCiAgICAgICAgIm"
            ticketPayload: "dGlja2V0IHBheWxvYWQgMg=="
            validFrom: "2017-08-23T07:00:00"
            validTo: "2017-08-23T08:00:00"

  ReservationDeleteResponse:
    type: object
    properties:
      cancellation:
        type: boolean
        description: Result of the cancellation operation


# -----------------------------------------------------
# OBJECTS
# -----------------------------------------------------

  Transport:
    type: object
    required:
      - operator
      - vehicleInfo
    properties:
      operator:
        type: string
        description: "Name of the transport operator"
      vehicleInfo:
        type: string
        description: "Description of transport operator."
      seatInfo:
        type: string
        description: "Seat information details of transport vehicle."

  AccountId:
    type: object
    required:
      - account
    properties:
      account:
        type: string

  CustomerInfo:
    type: object
    description: "Voluntarily provided contact information from passenger, eg. in the event of a possible disturbance."
    properties:
      name:
        type: string
        description: "Passenger name"
      phone:
        type: string
        description: "Passenger phone number"
      email:
        type: string
        format: email
        description: "Passenger email address"

  ProductList:
    type: array
    items:
      $ref: "#/definitions/ProductDescription"

  Product:
    type: object
    required:
      - productType
      - contract
      - name
    properties:
      productType:
        type: string
        description: "Unique product identification."
      contract:
        type: string
        description: "Contract identifier"
      name:
        type: string
        description: "Product name"
      description:
        type: string
        description: "Product desdription"
      validFrom:
        type: string
        format: "date-time"
        description: "Starting datetime of product validity. If value is not given, current datetime is used."
      validTo:
        type: string
        format: "date-time"
        description: "End datetime of product validity. If value is not given, product is valid indefinitely."
      extraServices:
        type: array
        items:
          $ref: "#/definitions/ExtraService"
      accessibility:
        type: array
        items:
          $ref: "#/definitions/Accessibility"
      from:
        $ref: '#/definitions/CoordinateLocation'
      to:
        $ref: '#/definitions/CoordinateLocation'

  ProductDescription:
    title: ProductDescription
    type: object
    required:
      - suitablePassengerCategories
    allOf:
      - $ref: '#/definitions/Product'
      - type: object
        properties:
          suitablePassengerCategories:
            type: array
            description: "Passenger types that are able to use related product. Values must match returned values of \
                          products response."
            items:
              type: string

  ProductFare:
    type: object
    required:
      - currency
      - amount
      - vatPercent
    properties:
      currency:
        type: string
        description: "Currency code in [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format."
      amount:
        type: number
        format: double
        description: "Total price of offered service."
      vatPercent:
        type: number
        format: int32
        description: "VAT percentage of offered service."

  TravelPassenger:
    type: object
    required:
      - category
    properties:
      category:
        type: string
      extraServices:
        type: array
        items:
          $ref: "#/definitions/ExtraService"
      accessibility:
        type: array
        items:
          $ref: "#/definitions/Accessibility"

  TravelAvailability:
    type: object
    required:
      - reservationData
      - validTo
      - transport
      - applicableForPassengers
    allOf:
      - type: object
        properties:
          reservationData:
            type: string
            description: "Ticket supply information provided by the transportation service. With this information \
                          transport service is able to identify offered service. Content can be database sequence, \
                          calculated identifier or crypted capacity data that after decryption describes ordered \
                          service to transportation operator. This alone should be enough to identify where and \
                          when passenger wants to go, and what kind of product he/she is using."
          validTo:
            type: string
            format: "date-time"
            description: "End datetime of capacity offer validity. Offered capacity cannot be used outside of validity."
          fare:
            $ref: "#/definitions/ProductFare"
          transport:
            $ref: "#/definitions/Transport"
          applicableForPassengers:
            type: array
            description: "Reference to passenger categories given in availability request."
            items:
              $ref: "#/definitions/TravelPassenger"
  Accessibility:
    type: object
    required:
      - title
    properties:
      title:
        type: string
        enum:
          - WHEELCHAIR
          - PUSHCHAIR
          - PASSENGER_CART
          - LOW-FLOOR
          - GUIDE_DOG
          - ONBOARD_ASSISTANCE
          - BOARDING_ASSISTANCE
          - UNACCOMPANIED_MINOR_ASSISTANCE
          - OTHER
          - STEP_FREE_ACCESS
          - UNKNOWN
      additionalInformation:
        type: string
      description:
        type: string
      fare:
        $ref: "#/definitions/ProductFare"

  ExtraService:
    type: object
    description: Extra services for passenger, like transporting animal.
    required:
      - title
      - extraServiceReservationData
      - fare
    properties:
      title:
        type: string
      extraServiceReservationData:
        type: string
      description:
        type: string
      fare:
        $ref: "#/definitions/ProductFare"

  Travel:
    type: object
    required:
      - productType
      - dateTime
    properties:
      productType:
        type: string
        description: "Availability/Product identifier from the products query response."
      dateTime:
          type: string
          format: "date-time"
          description: "Datetime when transport service will or when customer wants to depart. This depends whether
                        transport service is public transport or Demand Response Transport (DRT) service."
      serviceId:
        type: string
        description: "Identifier for specific transport operator service. With this value requestor can prefer
                      certain timetable departure/service."
      from:
        $ref: '#/definitions/CombinedLocation'
      to:
        $ref: '#/definitions/CombinedLocation'

  Location:
    title: Location
    type: object
    properties:
      description:
        type: string
        description: Location description text.

  StopLocation:
    title: StopLocation
    type: object
    properties:
      id:
        type: string
        description: "Stop location identifier from stop registry both participants are using. Eg. Digiroad2"
      platform:
        type: string
        description: "Platform information from where service will depart. Meaningfull information in large station
                      areas where transport service can depart from multiple different platforms."

  CoordinateLocation:
    title: CoordinateLocation
    type: object
    description: >-
      Location description for the point of desparture or point of destination.
      Can be stop a location with using stopId and stopPlatform (for example a
      bus stop) or a coordinate locate using lat and lon numbers.
    allOf:
      - $ref: '#/definitions/Location'
      - type: object
        properties:
          lat:
            type: number
            format: double
            description: "Location coordinate latitude value in WGS-84 coordinatesystem."
          lon:
            type: number
            format: double
            description: "Location coordinate longitude value in WGS-84 coordinatesystem."

  CombinedLocation:
    title: Combined Location
    type: object
    description: >-
      Location description for the point of departure or point of destination.
      Can be stop a location with using stopId and stopPlatform (for example a
      bus stop) or a coordinate locate using lat and lon numbers.
    allOf:
      - $ref: '#/definitions/StopLocation'
      - $ref: '#/definitions/CoordinateLocation'

  ApiError:
    type: object
    description: Error response message in JSON format.
    required:
      - statusCode
      - message
    properties:
      statusCode:
        type: number
        format: int32
        description: HTTP statuscode of the error message.
      message:
        type: string
        description: Error message description.
    example:
      - statusCode: 403
        message: "Access to resource forbidden"

